on: [push, pull_request, workflow_dispatch]

permissions:
  contents: write

name: CI

env:
  RUSTFLAGS: -D warnings
  RUSTDOCFLAGS: -D warnings

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: check
          args: --all-features

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: clippy
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings

  build:
    runs-on: ${{ matrix.os }}
    env:
      BINNAME: blueos-recorder
    strategy:
      fail-fast: false
      matrix:
        include:
        - os: macos-latest
          TARGET: aarch64-apple-darwin

        - os: ubuntu-latest
          TARGET: aarch64-unknown-linux-gnu

        - os: ubuntu-latest
          TARGET: armv7-unknown-linux-gnueabihf

        - os: ubuntu-latest
          TARGET: x86_64-unknown-linux-gnu

        - os: ubuntu-latest
          TARGET: aarch64-unknown-linux-musl

        - os: ubuntu-latest
          TARGET: armv7-unknown-linux-musleabihf

        - os: ubuntu-latest
          TARGET: x86_64-unknown-linux-musl

        - os: windows-latest
          TARGET: x86_64-pc-windows-msvc
          EXTENSION: .exe

    steps:
    - name: Building ${{ matrix.TARGET }}
      run: echo "${{ matrix.TARGET }}"

    - uses: actions/checkout@v4
      with:
        submodules: true

    - name: Build binary
      uses: houseabsolute/actions-rust-cross@v1
      with:
        command: build
        target: ${{ matrix.TARGET }}
        args: "--verbose --release "
        strip: true

    - name: Rename
      run: cp target/${{ matrix.TARGET }}/release/${{ env.BINNAME }}${{ matrix.EXTENSION }} ${{ env.BINNAME }}-${{ matrix.TARGET }}${{ matrix.EXTENSION }}

    - uses: actions/upload-artifact@master
      with:
        name: ${{ env.BINNAME }}-${{ matrix.TARGET }}${{ matrix.EXTENSION }}
        path: ${{ env.BINNAME }}-${{ matrix.TARGET }}${{ matrix.EXTENSION }}

    - uses: svenstaro/upload-release-action@v2
      name: Upload binaries to release
      if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') }}
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: ${{ env.BINNAME }}-${{ matrix.TARGET }}${{ matrix.EXTENSION }}
        asset_name: ${{ env.BINNAME }}-${{ matrix.TARGET }}${{ matrix.EXTENSION }}
        tag: ${{ github.ref }}
        prerelease: false
        overwrite: true